{"ast":null,"code":"var _jsxFileName = \"/Users/lordsmac/Documents/Dev/React_Play_Ground/Dashboard/Portfolio/portfolio/src/components/TaskBar.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useId } from 'react';\nimport '../style/main.css';\nimport StartMenu from './StartMenu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faVolumeUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskBar(props) {\n  _s();\n  const [time, setTime] = React.useState(\"\");\n  const [toggle, setToggle] = React.useState(false);\n  function currentTime() {\n    let date = new Date();\n    let day = date.getDay();\n    let hh = date.getHours();\n    let mm = date.getMinutes();\n    let ss = date.getSeconds();\n    let session = \"AM\";\n    if (hh === 0) {\n      hh = 12;\n    }\n    if (hh > 12) {\n      hh = hh - 12;\n      session = \"PM\";\n    }\n    hh = hh < 10 ? \"0\" + hh : hh;\n    mm = mm < 10 ? \"0\" + mm : mm;\n    ss = ss < 10 ? \"0\" + ss : ss;\n    let time = hh + \":\" + mm + \":\" + ss + \" \" + session;\n    let t = setTimeout(function () {\n      currentTime();\n    }, 1000);\n    setTime(time);\n  }\n  function toggleStartMenu(event) {\n    if (toggle === false) {\n      setToggle(true);\n    } else {\n      setToggle(false);\n    }\n  }\n  const activityStyle = {\n    visibility: props.task ? \"visible\" : \"hidden\"\n  };\n  useEffect(() => {\n    //getTime()\n    currentTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TaskBar\",\n    children: [/*#__PURE__*/_jsxDEV(StartMenu, {\n      visibility: toggle,\n      getTask: props.getTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"StartMenuButton\",\n      onClick: toggleStartMenu,\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"title\",\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskBarActivity\",\n      onClick: props.visibility,\n      style: activityStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskBarEnd\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"taskbarend-icon\",\n        icon: faVolumeUp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"taskbarend-icon\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskBar, \"nleLIAVAg950rM5OsNURI+Et/G4=\");\n_c = TaskBar;\nvar _c;\n$RefreshReg$(_c, \"TaskBar\");","map":{"version":3,"names":["React","Component","useEffect","useId","StartMenu","FontAwesomeIcon","faVolumeUp","jsxDEV","_jsxDEV","TaskBar","props","_s","time","setTime","useState","toggle","setToggle","currentTime","date","Date","day","getDay","hh","getHours","mm","getMinutes","ss","getSeconds","session","t","setTimeout","toggleStartMenu","event","activityStyle","visibility","task","className","children","getTask","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","icon","_c","$RefreshReg$"],"sources":["/Users/lordsmac/Documents/Dev/React_Play_Ground/Dashboard/Portfolio/portfolio/src/components/TaskBar.js"],"sourcesContent":["import React, { Component, useEffect, useId } from 'react';\nimport '../style/main.css';\nimport StartMenu from './StartMenu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {  faVolumeUp} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function TaskBar(props){\n\n    const [time, setTime] = React.useState(\"\")\n    const [toggle, setToggle] = React.useState(false)\n\n    \n\n\nfunction currentTime() {\n    let date = new Date();\n    let day = date.getDay();\n    let hh = date.getHours();\n    let mm = date.getMinutes();\n    let ss = date.getSeconds();\n    let session = \"AM\";\n  \n    if(hh === 0){\n        hh = 12;\n    }\n    if(hh > 12){\n        hh = hh - 12;\n        session = \"PM\";\n     }\n  \n     hh = (hh < 10) ? \"0\" + hh : hh;\n     mm = (mm < 10) ? \"0\" + mm : mm;\n     ss = (ss < 10) ? \"0\" + ss : ss;\n      \n     let time =  hh + \":\" + mm + \":\" + ss + \" \" + session;\n  \n    \n    let t = setTimeout(function(){ currentTime() }, 1000);\n    setTime(time)\n  }\n  \n  \n  \n  \n\n    function toggleStartMenu(event){\n        \n        if ( toggle === false){\n            setToggle(true)\n            \n           \n        }else{\n            setToggle(false)\n            \n        }\n\n    \n    }\n\n    const activityStyle = {\n        visibility : props.task ? \"visible\" : \"hidden\",\n    }\n    useEffect (() =>{\n        //getTime()\n        currentTime();\n        \n    })\n\n \n\n    return(\n        <div className='TaskBar'>\n            <StartMenu visibility = {toggle} getTask = {props.getTask}/>\n            <div className='StartMenuButton' onClick={toggleStartMenu}>\n                <strong className='title'>start</strong>\n            </div>\n        <div className='TaskBarActivity' onClick={props.visibility} style={activityStyle}>\n            <div className='activity'>\n                <p>{props.task}</p>\n            </div>\n        </div>\n\n        <div className='TaskBarEnd'>\n            <FontAwesomeIcon className='taskbarend-icon' icon={faVolumeUp} />\n        <p className='taskbarend-icon'>{time}</p>\n        </div>\n        </div>\n\n\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}